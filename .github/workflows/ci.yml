# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI test easyGOband

on: 
  push:
    branches-ignore:
      - master
      - 'dev'


jobs:
  ci:
    name: Continuous Integration
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12 # VersiÃ³n de Node
    
      - name: Cache node modules
        id: node-cache # Id del cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        if: steps.node-cache.outputs.cache-hit != 'true' 
        run: npm install
    
      - name: Run Build command
        run: npm run build -- --prod
      
      - name: Run Unit tests
        run: npm run test -- --configuration=ci
        
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - name: "Build & test"
        run: |
          echo "done!"
          

      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "${{steps.extract_branch.outputs.branch}}"
          prerelease: true
          title: "Development Build"
          
      - name: Find and Replace
        uses: jacobtomlinson/gha-find-replace@master
        with:
          find: "heroku_app_resource-name"
          replace: "${{steps.extract_branch.outputs.branch}}"
          include: "main.tf"
      - name: Create vars file
        run: |
            echo branch = "\"${{steps.extract_branch.outputs.branch}}\""        > vari.auto.tfvars
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
                
      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        run: terraform init 
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      - name: Terraform Apply
        run: terraform apply -auto-approve
        
